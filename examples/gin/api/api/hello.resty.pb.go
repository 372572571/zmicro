// Code generated by protoc-gen-zmicro-resty. DO NOT EDIT.
// versions:
// - protoc-gen-zmicro-resty v0.1.0
// - protoc                v3.21.2
// source: api/hello.proto

package api

import (
	context "context"
	errors "errors"
	http "github.com/zmicro-team/zmicro/core/transport/http"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = errors.New
var _ = context.TODO
var _ = http.NewClient

type GreeterHTTPClient interface {
	// SayHello
	SayHello(context.Context, *HelloRequest, ...http.CallOption) (*HelloReply, error)
}

type GreeterHTTPClientImpl struct {
	cc *http.Client
}

func NewGreeterHTTPClient(c *http.Client) GreeterHTTPClient {
	return &GreeterHTTPClientImpl{
		cc: c,
	}
}

func (c *GreeterHTTPClientImpl) SayHello(ctx context.Context, req *HelloRequest, opts ...http.CallOption) (*HelloReply, error) {
	var err error
	var resp HelloReply

	settings := http.DefaultCallOption("/hello/{name}")
	for _, opt := range opts {
		opt(&settings)
	}
	path := c.cc.EncodeURL(settings.Path, req, true)
	ctx = http.WithValueCallOption(ctx, settings)
	err = c.cc.Invoke(ctx, "GET", path, nil, &resp)
	if err != nil {
		return nil, err
	}
	return &resp, nil
}
